# Dockerfile for client project

# Base image
FROM node:lts-alpine

# Set working directory
WORKDIR /app

# Copy package.json and yarn.lock files
COPY package.json yarn.lock ./

# Check for packageManager field in package.json
RUN grep -q '"packageManager": "yarn@' package.json \
    && ( \
        # Extract the Yarn version from package.json
        YARN_VERSION=$(grep -o '"packageManager": "yarn@[0-9.]*"' package.json | grep -o '[0-9.]*') \
        # Install the specified version of Yarn
        && npm install -g yarn@$YARN_VERSION --force \
        # Install Corepack and enable it
        && npm install -g corepack \
        && corepack enable \
        # Install project dependencies
        && yarn install --immutable --immutable-cache --check-cache \
    ) || ( \
        # If packageManager field is not found, install the latest version of Yarn
        npm install -g yarn --force \
        # Install project dependencies using Yarn
        && yarn install --immutable --immutable-cache --check-cache \
    )

# Copies everything over to Docker environment
COPY . ./

# Build the application
RUN yarn client:build

# Expose port
EXPOSE 80
