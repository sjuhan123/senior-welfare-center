# Dockerfile for client project

# Base image
FROM node:lts-alpine AS builder

# Set working directory
WORKDIR /app

COPY package.json yarn.lock ./

# Install Corepack and enable it
RUN npm install -g corepack \
    && corepack enable

# Install yarn globally with the specified version
RUN npm install yarn --global --force

# Install project dependencies
RUN yarn install --immutable --immutable-cache --check-cache

# Copies everything over to Docker environment
COPY . ./

# Build the application
RUN yarn install --immutable \
    && yarn client:build

#pull the official nginx:1.24.0 base image
FROM nginx:1.24.0
#copies React to the container directory
# Set working directory to nginx resources directory
# WORKDIR /usr/share/nginx/html
COPY ./nginx/client.conf /etc/nginx/conf.d/default.conf
# Remove default nginx static resources
RUN rm -rf ./usr/share/nginx/html/*
# Copies static resources from builder stage
COPY --from=builder /app/packages/client/dist /usr/share/nginx/html/
# Containers run nginx with global directives and daemon off
EXPOSE 433
ENTRYPOINT ["nginx", "-g", "daemon off;"]